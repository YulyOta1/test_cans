#include <iostream>
class mathfunctions {
public:
    void delay(int number_of_seconds)
    {
        // Converting time into milli_seconds
        int milli_seconds = 1000 * number_of_seconds;
        // Storing start time
        clock_t start_time = clock();
        // looping till required time is not achieved
        while (clock() < start_time + milli_seconds)
            ;
    }
};
struct CANLIN_adapter_cfg{
public:
    int tosun_speed = 250;
};
struct cgw_cfg {
        int udsHandle = -1;
        ps32 Diagnostic_Module_Handle = &udsHandle;
        u32 CH_Index = CH6;
        u8 CANFD_Support = 0; // 0 - false, 1 - true
        u8 Max_DLC = 8;
        u32 RequestID = 0x18DA21F1;
        bool RequestID_is_Std = false;
        u32 ResponseID = 0x18DAF121;
        bool ResponseID_is_Std = false;
        u32 FunctionID = 0x18DA21F1;
        bool FunctionID_is_Std = false;
        int CAN_CH_count = 6;
        int ArraySize = 2;
        u16 Data_ID = 0xAB00;
};
struct cgw_uds {
    byte programming_session[2] = { 0x10, 0x03 };
    byte tester_present[2] = { 0x3E, 0x80 };
    byte writeData[3079] =
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x02, 0x27, 0x2F, 0xD2, 0x0C, 0x03,
     0x04, 0x27, 0x55, 0xFF, 0x18, 0x00,
     0x08, 0x1E, 0x00, 0xA7, 0x18, 0x00,
     0x01, 0x2A, 0x6F, 0xFE, 0x10, 0x02,
     0x04, 0x27, 0x51, 0xFE, 0x18, 0x00,
     0x03, 0x50, 0x12, 0xFE, 0x18, 0x02,
     0x04, 0x17, 0x2F, 0xFF, 0x18, 0x00,
     0x11, 0x4E, 0xEB, 0xFE, 0x18, 0x02,
     0x11, 0x4F, 0xEB, 0xFE, 0x18, 0x02,
     0x11, 0x6A, 0xFC, 0xFE, 0x18, 0x02,
     0x11, 0x6B, 0xFC, 0xFE, 0x18, 0x02,
     0x04, 0x17, 0x60, 0xFF, 0x18, 0x00,
     0x04, 0x28, 0x20, 0xFF, 0x18, 0x03,
     0x04, 0x27, 0x10, 0x00, 0x0C, 0x00,
     0x04, 0x27, 0x29, 0x00, 0x0C, 0x00,
     0x04, 0x27, 0xF0, 0xFE, 0x18, 0x00,
     0x04, 0x27, 0xF1, 0xFE, 0x18, 0x00,
     0x01, 0x00, 0xE5, 0xFD, 0x18, 0x02,
     0x04, 0x27, 0x2B, 0xFC, 0x18, 0x00,
     0x01, 0x27, 0x8F, 0xFF, 0x18, 0x02,
     0x04, 0x00, 0x1E, 0xE0, 0x18, 0x00,
     0x04, 0x1E, 0xE8, 0xA9, 0x18, 0x00,
     0x08, 0x13, 0x1D, 0xF0, 0x18, 0x02,
     0x04, 0x27, 0x50, 0xD0, 0x18, 0x01,
     0x04, 0x34, 0x50, 0xEF, 0x18, 0x00,
     0x04, 0x00, 0xAF, 0xFE, 0x18, 0x04,
     0x04, 0xE6, 0x03, 0xFF, 0x1C, 0x04,
     0x04, 0xE6, 0x04, 0xFF, 0x1C, 0x04,
     0x04, 0xE6, 0x05, 0xFF, 0x1C, 0x04,
     0x18, 0x17, 0xEA, 0xFE, 0x18, 0x02,
     0x10, 0x28, 0x1C, 0xFF, 0x18, 0x03,
     0x08, 0x1C, 0x28, 0xFF, 0x18, 0x04,
     0x08, 0x2A, 0x35, 0xFF, 0x10, 0x02,
     0x02, 0x28, 0x79, 0xFE, 0x18, 0x03,
     0x02, 0x28, 0x7D, 0xFF, 0x18, 0x03,
     0x08, 0x2B, 0xF4, 0xFE, 0x18, 0x01,
     0x08, 0x2B, 0x78, 0xFE, 0x18, 0x01,
     0x08, 0x2B, 0x7A, 0xFE, 0x18, 0x01,
     0x08, 0x2B, 0x7E, 0xFF, 0x18, 0x01,
     0x1C, 0x33, 0xF4, 0xFE, 0x18, 0x01,
     0x10, 0x0B, 0x4F, 0xFE, 0x18, 0x02,
     0x04, 0x1E, 0x83, 0xFD, 0x18, 0x00,
     0x08, 0xE8, 0x07, 0xF0, 0x10, 0x02,
     0x1C, 0x1E, 0xAC, 0xFE, 0x1C, 0x00,
     0x04, 0x27, 0xCC, 0xFD, 0x0C, 0x00,
     0x04, 0x27, 0xA0, 0x0B, 0x0C, 0x00,
     0x18, 0x44, 0x09, 0xFD, 0x18, 0x01,
     0x18, 0x45, 0x09, 0xFD, 0x18, 0x01,
     0x08, 0x2A, 0xF6, 0xF0, 0x18, 0x02,
     0x04, 0x28, 0xF6, 0xF0, 0x18, 0x03,
     0x18, 0x17, 0xEE, 0xDE, 0x1C, 0x02,
     0x09, 0x0B, 0xC4, 0xFD, 0x18, 0x02,
     0x10, 0x17, 0x1C, 0xFF, 0x18, 0x02,
     0x09, 0x17, 0x31, 0xFF, 0x18, 0x02,
     0x18, 0x00, 0x56, 0xFE, 0x18, 0x02,
     0x10, 0x00, 0x23, 0xF0, 0x0C, 0x02,
     0x18, 0x00, 0xFF, 0xFE, 0x18, 0x02,
     0x01, 0x28, 0x19, 0xFF, 0x18, 0x03,
     0x11, 0x03, 0x02, 0xF0, 0x0C, 0x02,
     0x09, 0x03, 0x4A, 0xFE, 0x18, 0x02,
     0x04, 0xE6, 0x00, 0x9C, 0x18, 0x00,
     0x04, 0x1C, 0xAB, 0xFF, 0x18, 0x04,
     0x04, 0xF9, 0xFF, 0xDB, 0x18, 0x00,
     0x04, 0x20, 0xC8, 0xE4, 0x18, 0x01,
     0x01, 0x1C, 0x31, 0xFF, 0x18, 0x04,
     0x1C, 0x27, 0x7F, 0xFF, 0x18, 0x00,
     0x04, 0x1E, 0xFF, 0xE0, 0x18, 0x00,
     0x1C, 0x1E, 0xCA, 0xFE, 0x18, 0x00,
     0x1C, 0x1E, 0xFF, 0xEC, 0x18, 0x00,
     0x1C, 0x1E, 0xFF, 0xEB, 0x18, 0x00,
     0x38, 0x27, 0xCA, 0xFE, 0x18, 0x02,
     0x38, 0x27, 0xFF, 0xEC, 0x18, 0x02,
     0x38, 0x27, 0xFF, 0xEB, 0x18, 0x02,
     0x38, 0x03, 0xCA, 0xFE, 0x18, 0x02,
     0x38, 0x03, 0xFF, 0xEC, 0x18, 0x02,
     0x38, 0x03, 0xFF, 0xEB, 0x18, 0x02,
     0x38, 0x0B, 0xCA, 0xFE, 0x18, 0x02,
     0x38, 0x0B, 0xFF, 0xEC, 0x1C, 0x02,
     0x38, 0x0B, 0xFF, 0xEB, 0x1C, 0x02,
     0x38, 0x13, 0xCA, 0xFE, 0x18, 0x02,
     0x38, 0x13, 0xFF, 0xEC, 0x18, 0x02,
     0x38, 0x13, 0xFF, 0xEB, 0x18, 0x02,
     0x38, 0xE8, 0xCA, 0xFE, 0x18, 0x02,
     0x38, 0xE8, 0xFF, 0xEC, 0x18, 0x02,
     0x38, 0xE8, 0xFF, 0xEB, 0x18, 0x02,
     0x01, 0x1C, 0x9A, 0xFF, 0x18, 0x04,
     0x3C, 0x1E, 0xEF, 0xFE, 0x18, 0x00,
     0x0E, 0x19, 0xE1, 0xFD, 0x18, 0x00,
     0x04, 0x19, 0x00, 0xE0, 0x18, 0x00,
     0x09, 0x50, 0xFF, 0xEF, 0x0C, 0x02,
     0x19, 0xC8, 0xC4, 0xFE, 0x18, 0x02,
     0x18, 0xC8, 0x5C, 0xFE, 0x18, 0x02,
     0x19, 0x03, 0x85, 0xFF, 0x18, 0x02,
     0x1C, 0x1E, 0x21, 0xFF, 0x18, 0x00,
     0x1C, 0x1E, 0x22, 0xFF, 0x18, 0x00,
     0x1C, 0x1E, 0x23, 0xFF, 0x18, 0x00,
     0x18, 0x00, 0xF7, 0xFE, 0x18, 0x02,
     0x1D, 0x44, 0x6D, 0xFE, 0x18, 0x01,
     0x02, 0x28, 0x44, 0xE0, 0x18, 0x03,
     0x02, 0x1C, 0x44, 0xE0, 0x18, 0x04,
     0x02, 0x1E, 0x44, 0xE0, 0x18, 0x00,
     0x3C, 0x44, 0xCA, 0xFE, 0x18, 0x01,
     0x02, 0xF1, 0x44, 0xDA, 0x18, 0x00,
     0x20, 0x44, 0xF1, 0xDA, 0x18, 0x01,
     0x3D, 0x45, 0x6D, 0xFE, 0x18, 0x01,
     0x18, 0x44, 0x02, 0xFF, 0x18, 0x01,
     0x18, 0x45, 0x02, 0xFF, 0x18, 0x01,
     0x02, 0x28, 0x45, 0xE0, 0x18, 0x03,
     0x02, 0x1C, 0x45, 0xE0, 0x18, 0x04,
     0x02, 0x1E, 0x45, 0xE0, 0x18, 0x00,
     0x02, 0x28, 0x44, 0x85, 0x18, 0x03,
     0x02, 0x1C, 0x44, 0x85, 0x18, 0x04,
     0x02, 0x28, 0x45, 0x85, 0x18, 0x03,
     0x02, 0x1C, 0x45, 0x85, 0x18, 0x04,
     0x3C, 0x45, 0xCA, 0xFE, 0x18, 0x01,
     0x3C, 0x2B, 0xCA, 0xFE, 0x18, 0x01,
     0x02, 0x0B, 0x6E, 0xFE, 0x08, 0x02,
     0x02, 0xF1, 0x45, 0xDA, 0x18, 0x00,
     0x20, 0x45, 0xF1, 0xDA, 0x18, 0x01,
     0x04, 0x31, 0x14, 0xA5, 0x18, 0x00,
     0x02, 0x17, 0x2F, 0xEA, 0x18, 0x02,
     0x18, 0x17, 0xEE, 0xEA, 0x18, 0x02,
     0x04, 0x34, 0xE3, 0xFF, 0x04, 0x00,
     0x01, 0x27, 0xE6, 0xFF, 0x04, 0x02,
     0x04, 0x1E, 0x27, 0x01, 0x0C, 0x00,
     0x04, 0x05, 0x03, 0x01, 0x0C, 0x00,
     0x18, 0x00, 0x09, 0xFD, 0x18, 0x02,
     0x09, 0x17, 0x28, 0xFF, 0x18, 0x02,
     0x05, 0x28, 0x17, 0xFF, 0x18, 0x03,
     0x0C, 0x2F, 0x5A, 0xFE, 0x0C, 0x01,
     0x1C, 0x2F, 0x59, 0xFE, 0x18, 0x01,
     0x1C, 0x2F, 0xEA, 0xFE, 0x18, 0x01,
     0x1C, 0x2F, 0xCA, 0xFE, 0x18, 0x01,
     0x1C, 0x2F, 0xFF, 0xEC, 0x18, 0x01,
     0x1C, 0x2F, 0xFF, 0xEB, 0x18, 0x01,
     0x1B, 0x0B, 0x01, 0xF0, 0x18, 0x02,
     0x04, 0x1C, 0xFF, 0xEA, 0x18, 0x04,
     0x10, 0x0B, 0x70, 0xFE, 0x18, 0x02,
     0x3B, 0xEE, 0x6C, 0xFE, 0x0C, 0x02,
     0x08, 0xEE, 0xEC, 0xFE, 0x18, 0x02,
     0x18, 0xEE, 0xFF, 0xEC, 0x18, 0x02,
     0x18, 0xEE, 0xFF, 0xEB, 0x18, 0x02,
     0x04, 0x28, 0xEE, 0xEA, 0x18, 0x03,
     0x18, 0xEE, 0xC4, 0xFF, 0x18, 0x02,
     0x1C, 0x31, 0xCA, 0xFE, 0x18, 0x00,
     0x1C, 0x31, 0xFF, 0xEC, 0x18, 0x00,
     0x1C, 0x31, 0xFF, 0xEB, 0x18, 0x00,
     0x1C, 0x19, 0xCA, 0xFE, 0x18, 0x00,
     0x1C, 0x19, 0xFF, 0xEC, 0x18, 0x00,
     0x1C, 0x19, 0xFF, 0xEB, 0x18, 0x00,
     0x20, 0x31, 0xCB, 0xFE, 0x18, 0x00,
     0x20, 0x31, 0x00, 0xEC, 0x18, 0x00,
     0x20, 0x31, 0x00, 0xEB, 0x18, 0x00,
     0x20, 0x31, 0xCC, 0xFE, 0x18, 0x00,
     0x1E, 0x34, 0xFF, 0xE7, 0x0C, 0x00,
     0x1C, 0x34, 0xCA, 0xFE, 0x18, 0x00,
     0x1C, 0x34, 0xFF, 0xEC, 0x18, 0x00,
     0x1C, 0x34, 0xFF, 0xEB, 0x18, 0x00,
     0x1B, 0x00, 0x04, 0xF0, 0x0C, 0x02,
     0x1B, 0x00, 0xF1, 0xFE, 0x18, 0x02,
     0x04, 0x21, 0xF1, 0xFE, 0x18, 0x00,
     0x04, 0x1E, 0xF1, 0xFE, 0x18, 0x00,
     0x39, 0x01, 0xCA, 0xFE, 0x18, 0x02,
     0x38, 0x01, 0xFF, 0xEC, 0x18, 0x02,
     0x38, 0x01, 0xFF, 0xEB, 0x18, 0x02,
     0x01, 0x00, 0xE4, 0xFE, 0x18, 0x02,
     0x01, 0x00, 0x07, 0xFD, 0x18, 0x02,
     0x19, 0x00, 0xF5, 0xFE, 0x18, 0x02,
     0x19, 0x03, 0x05, 0xF0, 0x18, 0x02,
     0x21, 0x35, 0x9A, 0xFF, 0x18, 0x02,
     0x0C, 0x4B, 0x01, 0xA5, 0x18, 0x00,
     0x1C, 0x4B, 0xCA, 0xFE, 0x18, 0x00,
     0x1C, 0x4B, 0xFF, 0xEC, 0x18, 0x00,
     0x1C, 0x4B, 0xFF, 0xEB, 0x18, 0x00,
     0x1A, 0x0B, 0x09, 0xF0, 0x18, 0x02,
     0x18, 0x00, 0xEF, 0xFE, 0x18, 0x02,
     0x02, 0xF1, 0xD3, 0xFE, 0x18, 0x00,
     0x02, 0xF1, 0x00, 0xEA, 0x18, 0x00,
     0x04, 0xF9, 0xFE, 0xDF, 0x18, 0x00,
     0x04, 0xF9, 0x00, 0xEA, 0x18, 0x00,
     0x09, 0xEE, 0xE6, 0xFE, 0x18, 0x02,
     0x04, 0x1E, 0xA4, 0xFD, 0x18, 0x00,
     0x04, 0x72, 0xA4, 0xFD, 0x18, 0x00,
     0x01, 0xE4, 0x1D, 0xF0, 0x18, 0x02,
     0x20, 0x0B, 0xC5, 0xFD, 0x18, 0x02,
     0x1E, 0x30, 0xAE, 0xFE, 0x18, 0x00,
     0x04, 0x2F, 0x58, 0xFE, 0x18, 0x01,
     0x04, 0xF9, 0xFF, 0xDF, 0x18, 0x00,
     0x04, 0x1E, 0x01, 0xF0, 0x18, 0x00,
     0x04, 0xFE, 0x2A, 0xDF, 0x18, 0x00,
     0x04, 0xFE, 0xA0, 0xDF, 0x18, 0x00,
     0x04, 0xFE, 0xFF, 0xEA, 0x18, 0x04,
     0x20, 0xE8, 0xCB, 0xFE, 0x18, 0x02,
     0x04, 0xFA, 0xE8, 0xDF, 0x18, 0x00,
     0x04, 0xFA, 0xFF, 0xDF, 0x18, 0x00,
     0x0C, 0x1C, 0xCA, 0xFE, 0x18, 0x04,
     0x0C, 0x1C, 0x00, 0xEC, 0x18, 0x04,
     0x0C, 0x1C, 0x00, 0xEB, 0x18, 0x04,
     0x19, 0x1E, 0x00, 0xD0, 0x18, 0x02,
     0x19, 0x00, 0x03, 0xF0, 0x0C, 0x02,
     0x1B, 0x0B, 0xBF, 0xFE, 0x18, 0x02,
     0x19, 0x10, 0x00, 0xF0, 0x18, 0x02,
     0x19, 0x29, 0x00, 0xF0, 0x18, 0x02,
     0x04, 0x27, 0x29, 0xF0, 0x18, 0x00,
     0x04, 0x27, 0x00, 0xF0, 0x18, 0x00,
     0x39, 0x00, 0xFF, 0xEC, 0x18, 0x02,
     0x39, 0x00, 0xFF, 0xEB, 0x18, 0x02,
     0x18, 0x00, 0xE5, 0xFE, 0x18, 0x02,
     0x19, 0x00, 0xEE, 0xFE, 0x18, 0x02,
     0x18, 0x00, 0xE9, 0xFE, 0x18, 0x02,
     0x18, 0x00, 0xF2, 0xFE, 0x18, 0x02,
     0x19, 0xEE, 0xC1, 0xFE, 0x18, 0x02,
     0x18, 0x00, 0xF6, 0xFE, 0x18, 0x02,
     0x1A, 0x0B, 0xAC, 0xFE, 0x1C, 0x02,
     0x1C, 0x1E, 0xFC, 0xFE, 0x18, 0x00,
     0x1C, 0x1E, 0x40, 0xFE, 0x18, 0x00,
     0x0C, 0x1E, 0xD9, 0xFE, 0x18, 0x00,
     0x18, 0x0B, 0xF4, 0xFE, 0x18, 0x02,
     0x1C, 0x1E, 0xF6, 0xFE, 0x18, 0x00,
     0x1E, 0x1E, 0x06, 0xF0, 0x18, 0x00,
     0x04, 0x1E, 0x00, 0xE0, 0x18, 0x00,
     0x1E, 0x1E, 0x8C, 0xFE, 0x18, 0x00,
     0x1C, 0x1E, 0xC3, 0xFE, 0x1C, 0x00,
     0x04, 0x0B, 0xE4, 0xEF, 0x18, 0x00,
     0x01, 0x8A, 0xF9, 0xDA, 0x18, 0x00,
     0x20, 0xF9, 0x8A, 0xDA, 0x18, 0x00,
     0x08, 0xF1, 0x28, 0xDA, 0x18, 0x00,
     0x20, 0x28, 0xF1, 0xDA, 0x18, 0x03,
     0x20, 0x40, 0xF1, 0xDA, 0x18, 0x00,
     0x20, 0x27, 0xF1, 0xDA, 0x18, 0x02,
     0x20, 0x2F, 0xF1, 0xDA, 0x18, 0x01,
     0x20, 0x0B, 0xF1, 0xDA, 0x18, 0x02,
     0x20, 0x0B, 0xFA, 0xDA, 0x18, 0x02,
     0x20, 0x0B, 0xF0, 0xDA, 0x18, 0x02,
     0x20, 0x2B, 0xF1, 0xDA, 0x18, 0x01,
     0x20, 0x58, 0xF9, 0xDA, 0x18, 0x04,
     0x20, 0x1C, 0xF9, 0xDA, 0x18, 0x04,
     0x20, 0x00, 0xFA, 0xDA, 0x18, 0x02,
     0x20, 0x00, 0xF1, 0xDA, 0x18, 0x02,
     0x20, 0xE0, 0x07, 0x00, 0x00, 0x02,
     0x20, 0x3D, 0xF9, 0xDA, 0x18, 0x02,
     0x20, 0x03, 0xF1, 0xDA, 0x18, 0x02,
     0x20, 0x10, 0xF1, 0xDA, 0x18, 0x02,
     0x01, 0xF1, 0x40, 0xDA, 0x18, 0x00,
     0x04, 0xF1, 0x27, 0xDA, 0x18, 0x00,
     0x02, 0xF1, 0x2F, 0xDA, 0x18, 0x00,
     0x04, 0xF1, 0x0B, 0xDA, 0x18, 0x00,
     0x04, 0xFA, 0x0B, 0xDA, 0x18, 0x00,
     0x04, 0xF0, 0x0B, 0xDA, 0x18, 0x00,
     0x02, 0xF1, 0x2B, 0xDA, 0x18, 0x00,
     0x10, 0xF9, 0x58, 0xDA, 0x18, 0x00,
     0x10, 0xF9, 0x1C, 0xDA, 0x18, 0x00,
     0x04, 0xFA, 0x00, 0xDA, 0x18, 0x00,
     0x04, 0xF1, 0x00, 0xDA, 0x18, 0x00,
     0x04, 0xF1, 0x33, 0xDB, 0x18, 0x00,
     0x04, 0xE8, 0x07, 0x00, 0x00, 0x00,
     0x04, 0xDF, 0x07, 0x00, 0x00, 0x00,
     0x04, 0xF9, 0x3D, 0xDA, 0x18, 0x00,
     0x04, 0xF1, 0x03, 0xDA, 0x18, 0x00,
     0x04, 0xF1, 0x10, 0xDA, 0x18, 0x00,
     0x20, 0x41, 0xF1, 0xDA, 0x18, 0x00,
     0x20, 0x8B, 0xF1, 0xDA, 0x18, 0x00,
     0x20, 0xC0, 0xF1, 0xDA, 0x18, 0x00,
     0x20, 0x98, 0xF1, 0xDA, 0x18, 0x00,
     0x01, 0xF1, 0x41, 0xDA, 0x18, 0x00,
     0x01, 0xF1, 0x8B, 0xDA, 0x18, 0x00,
     0x01, 0xF1, 0xC0, 0xDA, 0x18, 0x00,
     0x01, 0xF1, 0x98, 0xDA, 0x18, 0x00,
     0x20, 0x42, 0xF1, 0xDA, 0x18, 0x01,
     0x02, 0xF1, 0x42, 0xDA, 0x18, 0x00,
     0x20, 0x35, 0xF1, 0xDA, 0x18, 0x02,
     0x04, 0xF1, 0x35, 0xDA, 0x18, 0x00,
     0x20, 0x50, 0xF1, 0xDA, 0x18, 0x02,
     0x20, 0x13, 0xF9, 0xDA, 0x18, 0x02,
     0x20, 0x13, 0xF1, 0xDA, 0x18, 0x02,
     0x20, 0x6A, 0xF1, 0xDA, 0x18, 0x02,
     0x20, 0x6B, 0xF1, 0xDA, 0x18, 0x02,
     0x20, 0x03, 0xFA, 0xDA, 0x18, 0x02,
     0x20, 0x82, 0xF1, 0xDA, 0x18, 0x02,
     0x04, 0xF1, 0x50, 0xDA, 0x18, 0x00,
     0x04, 0xF9, 0x13, 0xDA, 0x18, 0x00,
     0x04, 0xF1, 0x13, 0xDA, 0x18, 0x00,
     0x04, 0xF1, 0x6A, 0xDA, 0x18, 0x00,
     0x04, 0xF1, 0x6B, 0xDA, 0x18, 0x00,
     0x04, 0xFA, 0x03, 0xDA, 0x18, 0x00,
     0x04, 0xF1, 0x82, 0xDA, 0x18, 0x00,
     0x20, 0x7A, 0xF1, 0xDA, 0x18, 0x02,
     0x20, 0xE8, 0xF0, 0xDA, 0x18, 0x02,
     0x20, 0x2A, 0xF1, 0xDA, 0x18, 0x02,
     0x04, 0xF1, 0x7A, 0xDA, 0x18, 0x00,
     0x04, 0xF0, 0xE8, 0xDA, 0x18, 0x00,
     0x04, 0xF1, 0x2A, 0xDA, 0x18, 0x00,
     0x04, 0xF1, 0x4B, 0xDA, 0x18, 0x00,
     0x20, 0x4B, 0xF1, 0xDA, 0x18, 0x02,
     0x20, 0xEE, 0xF1, 0xDA, 0x18, 0x02,
     0x20, 0x17, 0xF9, 0xDA, 0x18, 0x02,
     0x04, 0xF1, 0xEE, 0xDA, 0x18, 0x00,
     0x04, 0xF9, 0x17, 0xDA, 0x18, 0x00,
     0x24, 0x56, 0x21, 0x4F };
    byte reqDataArray[2] = { 0x11,0x03 };
    byte responseArray[10];
    int responseArraySize = 10;
};
struct uds_timing {
    int p2_timeout = 5000;
    int p2_extended = 8000;
    int s3_servertime = 5000;
    int s3_clienttime = 4000;
};
struct seedNkey_cfg {
    int SeedLvl = 0x03;
    int seedLenght = 4;
    int SecurityLvl = 3;
    int keyLenght = 4;
    int KeyLvl = 0x04;
    int RecSeedSize = 4;
    byte seedBuffer[4];
    int ARecSeedSize = 4;
    byte ASeed[4];
    byte AKey[4];
    unsigned int oActualKeyArraySize;
};
cgw_cfg CGW;
cgw_uds CGW_UDS_message;
uds_timing CGW_UDS_timing;
mathfunctions objDelay;
seedNkey_cfg SeedNKey;
s32 vErrorCode;
